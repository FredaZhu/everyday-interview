/* 之前left使用了position: relative，所以就意味着在center开始的区域，还存在着一个left的宽度。
所以页面的最小宽度应该设置为200+150+200=550px */
body {
  min-width: 550px;
}

.grail {
  font-size: 24px;
  text-align: center;
}

.header, .footer {
  width: 100%;
  height: 60px;
  background-color: #999;
  line-height: 60px;
}

/* 假设左侧固定宽度200px，右侧固定宽度150px */
.container {
  padding-left: 200px;
  padding-right: 150px;
}

.container div {
  float: left;
  height: 670px;
  line-height: 670px;
}

.footer {
  clear: both;
}

.center {
  width: 100%;
  background-color: cadetblue;
}

.left {
  width: 200px;
  margin-left: -100%;
  position: relative;
  right: 200px;
  background-color: cornflowerblue;
}

.right {
  width: 150px;
  margin-right: -150px;
  background-color: darksalmon;
}

/* 在#center中，包含了一条声明width: 100%，这是中间栏能够做到自适应的关键。可能会有朋友认为不需要设置这条声明，
因为觉得center在不设置宽度的情况下会默认将宽度设置为父元素(container)的100%宽度。但需要注意到，center是浮动元素，
由于浮动具有包裹性，在不显式设置宽度的情况下会自动“收缩”到内容的尺寸大小。如果去掉width: 100%，
则当中间栏不包含或者包含较少内容时，整个布局会“崩掉”，而达不到这样的效果 */